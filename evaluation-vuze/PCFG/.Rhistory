read.csv("./classes/SE-Empirical/data-sets/chromium-data/chrome-log-bugs-multiple.csv")
read.csv("./classes/SE-Empirical/data-sets/chromium-data/bugtable.csv")
read.csv("./classes/SE-Empirical/data-sets/g2t/raw_data/M1-M2/AllRawData.csv")
read.csv("./classes/SE-Empirical/data-sets/g2t/raw_data/M1-M2/RawDataFemale.csv")
data.path <- "./data-sets/g2t/Raw_Data/Effort/"
data.path <- "./data-sets/g2t/Raw_Data/Effort/"
in.file <-"AllEffort.csv"
e <- read.csv(paste(data.path,in.file,sep="/"), header = T, sep = ",")
colnames(d)
data.path <- "./data-sets/g2t/raw_data/Effort/"
in.file <-"AllEffort.csv"
e <- read.csv(paste(data.path,in.file,sep="/"), header = T, sep = ",")
colnames(d)
d$TimeAll
d1 <- subset(d,  Model=='G')
d2 <- subset(d,  Model=='T')
mt <- sqrt(var(d$TimeAll))
summary(d1$TimeAll)
summary(d2$TimeAll)
png(filename = "MyFile.png",
width = 480, height = 480, units = "px",
pointsize = 12, bg = "white",
type = c("Xlib"))
boxplot(d2$TimeWholeModel, d1$TimeWholeModel)
dev.off()
e1 <- subset(e,  Model=='G')
e2 <- subset(e,  Model=='T')
e1c <- subset(e,  Model=='G' & AFD.IrM < 400 & AFD.M <400  & AFD.ReM < 400)
e2c <- subset(e,  Model=='T' & AFD.IrM < 400& AFD.M <400 & AFD.ReM < 400)
png(filename = "MyFile.png",
width = 480, height = 480, units = "px",
pointsize = 12, bg = "white",
type = c("Xlib"))
boxplot(e2$AFD.M, e1$AFD.M,e2$AFD.Q, e1$AFD.Q, e2$AFD.ReM, e1$AFD.ReM,e2$AFD.IrM, e1$AFD.IrM)
dev.off()
boxplot(e2c$AFD.M, e1c$AFD.M,e2c$AFD.Q, e1c$AFD.Q, e2c$AFD.ReM, e1c$AFD.ReM,e2c$AFD.IrM, e1c$AFD.IrM)
library(vioplot)
vioplot(e2c$AFD.M, e1c$AFD.M,e2c$AFD.Q, e1c$AFD.Q, e2c$AFD.ReM, e1c$AFD.ReM,e2c$AFD.IrM, e1c$AFD.IrM, na.rm=T)
# remove the NaN
e01c <- e1[is.finite(e1$AFD.M),]
e02c <- e2[is.finite(e2$AFD.M),]
data.path <- "./data-sets/g2t/raw_data/M1-M2/"
in.file <-"AllRawData.csv"
d <- read.csv(paste(data.path,in.file,sep="/"), header = T, sep = ",")
library(tm)
setwd("~/repository/java-xal/evaluation-vuze/PCFG")
n
csv <- read.csv("resultIndexSyncnumber.csv", sep = ";", header = T)
View(csv)
csv_importing_greater_zero_and_sum_zero <- csv[csv$sum==0 & csv$num.imported > 0,]
aggregate_sum <- ddply(csv_sum_greater_zero, .(package), summarize, Sum=sum(sum))
aggregate_import <- ddply(csv_sum_greater_zero, .(package), summarize, imported=sum(num.imported))
t <- cbind(aggregate_sum[ order( aggregate_sum$package ),] , aggregate_import[order(aggregate_import$package), ])
t <- t[,c(1,2,4)]
top5sum <- t[order( t$Sum , decreasing = T ),][1:5,]
top5import <- t[order( t$imported , decreasing = T ),][1:5,]
csv <- read.csv("resultIndexSyncnumber.csv", sep = ";", header = T)
csv_sum_greater_zero <- csv[csv$sum>0,]
csv_importing_greater_zero_and_sum_zero <- csv[csv$sum==0 & csv$num.imported > 0,]
aggregate_sum <- ddply(csv_sum_greater_zero, .(package), summarize, Sum=sum(sum))
aggregate_import <- ddply(csv_sum_greater_zero, .(package), summarize, imported=sum(num.imported))
library(plyr)
csv <- read.csv("resultIndexSyncnumber.csv", sep = ";", header = T)
csv_sum_greater_zero <- csv[csv$sum>0,]
csv_importing_greater_zero_and_sum_zero <- csv[csv$sum==0 & csv$num.imported > 0,]
aggregate_sum <- ddply(csv_sum_greater_zero, .(package), summarize, Sum=sum(sum))
aggregate_import <- ddply(csv_sum_greater_zero, .(package), summarize, imported=sum(num.imported))
t <- cbind(aggregate_sum[ order( aggregate_sum$package ),] , aggregate_import[order(aggregate_import$package), ])
t <- t[,c(1,2,4)]
top5sum <- t[order( t$Sum , decreasing = T ),][1:5,]
top5import <- t[order( t$imported , decreasing = T ),][1:5,]
View(top5sum)

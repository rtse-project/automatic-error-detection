<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<XAL>
	<Automaton Id="GenerateTopologyAsync">
		<GlobalState>
			<Variable Name="o" Type="Object" Value="" IO="I"  />
		</GlobalState>
		<Clocks/>
		<ActionPool/>
		<States>
			<State Id="init" style="x:31; y:44; h:30; w:49" />
			<State Id="this._class_takes_nd_expr" style="x:31; y:44; h:30; w:49" />
		</States>
		<InitialState IdState="init"/>
		<FinalStates/>
		<Transitions>
			<Transition IdInputState="init" IdOutputState="this._class_takes_nd_expr" style="[]" />
		</Transitions>
	</Automaton>
	<Automaton Id="run">
		<GlobalState/>
		<Clocks/>
		<ActionPool/>
		<States>
			<State Id="init" style="x:31; y:44; h:30; w:49" />
			<State Id="call_Thread_sleep" style="x:31; y:44; h:30; w:49" />
			<State Id="call_Thread_sleep_0" style="x:31; y:44; h:30; w:49" />
			<State Id="call_e1_printStackTrace" style="x:31; y:44; h:30; w:49" />
			<State Id="while" style="x:31; y:44; h:30; w:49" />
			<State Id="endwhile" style="x:31; y:44; h:30; w:49" />
			<State Id="isRunning" style="x:31; y:44; h:30; w:49" />
			<State Id="call__class_createTopology" style="x:31; y:44; h:30; w:49" />
			<State Id="call_Thread_sleep_1" style="x:31; y:44; h:30; w:49" />
			<State Id="call_Thread_sleep_2" style="x:31; y:44; h:30; w:49" />
			<State Id="call_e_printStackTrace" style="x:31; y:44; h:30; w:49" />
		</States>
		<InitialState IdState="init"/>
		<FinalStates>
			<FinalState IdState="endwhile"/>
		</FinalStates>
		<Transitions>
			<Transition IdInputState="init" IdOutputState="call_Thread_sleep" style="[]" />
			<Transition IdInputState="call_Thread_sleep" IdOutputState="call_Thread_sleep_0" style="[]" />
			<Transition IdInputState="call_Thread_sleep_0" IdOutputState="call_e1_printStackTrace" style="[]" />
			<Transition IdInputState="call_e1_printStackTrace" IdOutputState="while" style="[]" />
			<Transition IdInputState="while" IdOutputState="isRunning" style="[]" />
			<Transition IdInputState="isRunning" IdOutputState="endwhile" MetricValue="false" style="[]" />
			<Transition IdInputState="isRunning" IdOutputState="call__class_createTopology" MetricValue="true" style="[]" />
			<Transition IdInputState="call__class_createTopology" IdOutputState="call_Thread_sleep_1" style="[]" />
			<Transition IdInputState="call_Thread_sleep_1" IdOutputState="call_Thread_sleep_2" style="[]" />
			<Transition IdInputState="call_Thread_sleep_2" IdOutputState="call_e_printStackTrace" style="[]" />
			<Transition IdInputState="call_e_printStackTrace" IdOutputState="while" style="[]" />
		</Transitions>
	</Automaton>
	<Automaton Id="setRunning">
		<GlobalState>
			<Variable Name="v" Type="boolean" Value="" IO="I"  />
		</GlobalState>
		<Clocks/>
		<ActionPool/>
		<States>
			<State Id="init" style="x:31; y:44; h:30; w:49" />
			<State Id="isRunning_takes_v" style="x:31; y:44; h:30; w:49" />
		</States>
		<InitialState IdState="init"/>
		<FinalStates>
			<FinalState IdState="isRunning_takes_v"/>
		</FinalStates>
		<Transitions>
			<Transition IdInputState="init" IdOutputState="isRunning_takes_v" style="[]" />
		</Transitions>
	</Automaton>
</XAL>
